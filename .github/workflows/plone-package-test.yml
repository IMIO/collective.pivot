# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Run black
      run: black --check --verbose .

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: [3.8, 2.7]
        plone-version: [5.2, 4.3]
        exclude:
          - python-version: 3.8
            plone-version: 4.3
          - python-version: 2.7
            plone-version: 5.2
        os: [ubuntu-latest]

    steps:
    - name: Clone repo
      uses: actions/checkout@v2

    - name: Cache eggs
      uses: actions/cache@v2
      env:
        cache-name: cache-eggs
      with:
        path: ./eggs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies and run buildout
      run: sed -ie "s#test_plonex.x.cfg#test_plone${{ matrix.plone-version }}.cfg#" ci.cfg
      run: |
        sudo apt-get install -qq -y python3-dev
        python -m pip install --upgrade pip
        pip install -r requirements.txt coveralls
        buildout -Nt 5
      env:
        CI: true

    - name: Test
      run: |
        bin/test

    - name: Coverage test
      run: |
        coverage run bin/test

    - name: Submit to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github
